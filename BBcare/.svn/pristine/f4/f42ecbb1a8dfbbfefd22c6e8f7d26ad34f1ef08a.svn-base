package chat;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import chat.vo.Chat;
import db.DBCon;
import user.UserDao;
import user.Users;

public class ChatDao {
	UserDao userDao = new UserDao();
	
	// 자신과 관련된 채팅 전부 불러오기
	public List<Chat> getChatList(Users user01, Users user02) {
		List<Chat> chatList = new ArrayList<Chat>();
		SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String sql = "select *\r\n"
				+ "from chat\r\n"
				+ "where (user01 = ? or user02 = ?) and (user01 = ? or user02 = ?)\r\n"
				+ "order by sendtime";
		
		try (Connection con = DBCon.con(); PreparedStatement pstmt = con.prepareStatement(sql);) {
			// 처리코드1
			pstmt.setString(1, user01.getUserId());
			pstmt.setString(2, user01.getUserId());
			pstmt.setString(3, user02.getUserId());
			pstmt.setString(4, user02.getUserId());
			try (ResultSet rs = pstmt.executeQuery();) {
				while (rs.next()) {
					chatList.add(new Chat(rs.getInt("chatnum"),
								rs.getString("chat"),
								userDao.getUser(rs.getString("user01")),
								userDao.getUser(rs.getString("user02")),
								sdf1.format(rs.getDate("sendtime"))));
				}
			}
		} catch (SQLException e) {
			System.out.println("DB 에러:" + e.getMessage());
		} catch (Exception e) {
			System.out.println("일반 에러:" + e.getMessage());
		}
		
		return chatList;
	}
	
	// 채팅 입력
	public int insertChat(String chat, Users user01, Users user02) {
		int insCnt = 0;
		String sql = "INSERT INTO chat VALUES (chat_seq.NEXTVAL, ?, ?, ?, sysdate)";
		
		try (Connection con = DBCon.con(); PreparedStatement pstmt = con.prepareStatement(sql);) {
			con.setAutoCommit(false);
			// 처리코드1
			pstmt.setString(1, chat);
			pstmt.setString(2, user01.getUserId());
			pstmt.setString(3, user02.getUserId());
			
			insCnt = pstmt.executeUpdate();
			if (insCnt == 0) {
				System.out.println("등록 실패");
				con.rollback();
			} else {
				con.commit(); // Commit the transaction
				System.out.println("등록 성공");
			}
		} catch (SQLException e) {
			System.out.println("DB 에러:" + e.getMessage());
		} catch (Exception e) {
			System.out.println("일반 에러:" + e.getMessage());
		}
		
		return insCnt;
	}
	
	public List<Chat> getAdminChatList() {
		List<Chat> chatList = new ArrayList<Chat>();
		SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String sql = "SELECT *\r\n"
				+ "FROM (\r\n"
				+ "	SELECT CHATNUM,\r\n"
				+ "		chat,\r\n"
				+ "		user01,\r\n"
				+ "		user02,\r\n"
				+ "		sendtime,\r\n"
				+ "		ROW_NUMBER() OVER(PARTITION BY user01, user02 ORDER BY SENDTIME DESC) AS rn\r\n"
				+ "	FROM chat \r\n"
				+ ")\r\n"
				+ "WHERE rn = 1 AND user01 != 'admin' AND user02 = 'admin'";
		
		try (Connection con = DBCon.con(); PreparedStatement pstmt = con.prepareStatement(sql);) {
			// 처리코드1
			try (ResultSet rs = pstmt.executeQuery();) {
				while (rs.next()) {
					chatList.add(new Chat(rs.getInt("chatnum"),
								rs.getString("chat"),
								userDao.getUser(rs.getString("user01")),
								userDao.getUser(rs.getString("user02")),
								sdf1.format(rs.getDate("sendtime"))));
				}
			}
		} catch (SQLException e) {
			System.out.println("DB 에러:" + e.getMessage());
		} catch (Exception e) {
			System.out.println("일반 에러:" + e.getMessage());
		}
		
		return chatList;
	}

}
