<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=<device-width>, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
//# javascript
// [개념] 1. 선언적 함수과 변수형함수의 차이점을 예제를 통해서 설명하세요.
// 선언적 함수 예제
// alert(fun01(2,3));
// function fun01(x,y){
//	return x+y;
//}
// 변수형 함수와 달리 선언 앞에 호출되어도 처리가 가능하다.

// 변수형 함수 예제
//var fun02 = function(x,y){
// return x+y;
//}
 // alert(fun02(2,3));




// [확인] 2. 선언적 함수로 매개변수로, 구구단의 시작단수와 마지막단수를 입력받아 console.log로 구구단을 출력하세요.
//function multiplicationTable(){
	//var start =Number(prompt("시작 단수","0"))
	//var end =Number(prompt("마지막 단수","0"))
	//for(let i = start; i<=end; i++){
    //for(let j=1;j<=9; j++){
	//	console.log(`${i}x${j}=${i*j}`);
//	}
//}
//}
//	multiplicationTable()



// [개념] 3. js의 함수의 매개변수와 리턴값을 기본예제를 만들어 설명하세요.
	function add(x, y) {
  return x + y;
}

var result = add(3, 5);
console.log(result);
    

// [개념] 4. js의 arguments는 어떤 때 사용되는지 기본예제를 통해서 설명하세요
	 //function sumAll() {
	// alert(typeof (arguments) + ' : ' + arguments.length);
      //      for(var idx in arguments){
        //        console.log(idx+":"+arguments[idx])
        //    }
        //}
        //sumAll(1, 2, 3, 4, 5, 6, 7, 8, 9);
        //
        //
// 자바에서 arguments는 매개변수를 배열로 받아서 처리하는 객체이다. 내부적으로 매개변수를 배열로 처리한다.


// # 조별로 파악사항(아래사항 조별로 취합 전달 17:20까지 전달)
// 1. 오늘 가장 어려웠던 부분 best3 및 내일 자세한 설명 필요한 부분
		//best1 : 객체를 매개변수로 받는 부분이 조금 어려웠다
		
// 2. 위 내용 중에 개념부분에 대한 의견을 조원들과 함께 나누고 정리해서 제출하세요
		

// 3. 오늘 지각(9:00기준)인원과 사유, 수업 중 집중 의무 준수 여부
//      지각 없음, 집중 여부 준수함




//강사님 정답
// # javascript
// **[개념] 1. 선언적 함수과 변수형함수의 차이점을 예제를 통해서 설명하세요.**

// **정답:** 
// 선언적 함수는 함수 이름으로 함수를 정의하는 것을 의미하며, 변수형 함수는 함수 표현식을 변수에 할당하여 함수를 정의합니다.

// ```javascript
// // 선언적 함수
// function add(x, y) {
//     return x + y;
// }

// // 변수형 함수
// var multiply = function(x, y) {
//     return x * y;
// };
// ```

// **[확인] 2. 선언적 함수로 매개변수로, 구구단의 시작단수와 마지막단수를 입력받아 console.log로 구구단을 출력하세요.**

// **정답:**
// ```javascript
// function printMultiplicationTable(start, end) {
//     for (var i = start; i <= end; i++) {
//         for (var j = 1; j <= 9; j++) {
//             console.log(i + " * " + j + " = " + i*j);
//         }
//         console.log("-----");
//     }
// }

// printMultiplicationTable(2, 5);
// ```

// **[개념] 3. js의 함수의 매개변수와 리턴값을 기본예제를 만들어 설명하세요.**

// **정답:**
// 함수의 매개변수는 함수가 작업을 수행할 때 필요한 값을 전달받는 변수입니다. 리턴값은 함수의 작업 결과를 호출자에게 반환하는 값입니다.

// ```javascript
// function add(x, y) { // x, y는 매개변수
//     return x + y;  // x + y의 결과는 리턴값
// }

// var result = add(3, 4);  // 3, 4는 인수, result에는 7이 저장됩니다.
// ```

// **[개념] 4. js의 arguments는 어떤 때 사용되는지 기본예제를 통해서 설명하세요.**

// **

// 정답:**
// `arguments`는 함수 내에서 사용할 수 있는 지역 변수로, 함수에 전달된 인수를 배열 형태로 가지고 있습니다. 이를 통해 함수에 전달된 모든 인수에 액세스할 수 있습니다.

// ```javascript
// function showArguments() {
//     for (var i = 0; i < arguments.length; i++) {
//         console.log(arguments[i]);
//     }
// }

// showArguments(1, 'hello', true, [1, 2, 3]);

    </script>
</body>
</html>