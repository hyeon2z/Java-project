<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	<script>
// # 아래 내용을 수업 예제 코드와 인터넷도 검색해서 정리해보세요
// [개념] 1. js의 ", '의 java와의 차이점을 기술하세요
	// js의 java에서의 char()유형이 없습니다. 그래서, "",''둘 다
	// 문자열 데이터 유형으로 인식합니다.
	// java에서는 ""==>문자열, ''==>한자리수 문자

// [개념] 2. js의 ", ' 데이터 출력형식을 기술하세요.
	// alert('안녕하세요'), alert("안녕하세요") ==> 동일하게 출력
	// 포함 관계 : alert("홍길동이 '안녕하세요'라고 말했다")
	// 			  alert('홍길동이 "안녕하세요"라고 말했다')
	// \(역슬레시 활용) : 같은 따옴표 안에 포함관계를 표현하고 싶다면,\를 활용한다.
	// 			alert("홍길동이 \"안녕하세요\"라고 말했다")
	// 			alert('홍길동이 \'안녕하세요\'라고 말했다')

// [개념] 3. js의 데이터유형을 기술하고, 예제를 통해 데이터 유형을 확인하는 함수와 함께 출력하세요.
	// js의 기본 데이터유형은 숫자(Number), 문자열(String), 불리언(Boolean), Undefined, Null 이다.
	// 변수 선언: var 변수명 = 데이터를 통해 자동으로 데이터 유형이 정해지고 이를 확인하기 위해서는
	// console.log(typeof(변수명)); 을 통해 데이터 유형을 확인할 수 있다.

// [확인] 4. js를 통해서 입력한 영화 관객 인원수와 관람료를 통한 총비용을 출력하게 하세요.
		var cnt = prompt("괴물을 관람한 관객수: ","0")
		var price = prompt("관람료: ","0")
		alert("총 비용: "+(cnt*price))

// [개념] 5. BOM과 DOM의 차이점을 기술하세요.
	//Window 객체 JavaScript의 최상위객체이자 전역 객체이면서 모든 객체가 소속된 글로벌 객체이다.
	// 객체화된 수 많은 구성 요소들로 이루어져 있다. ==> 브라우저의 로딩된 창을 나타내는 객체
	//BOM은 BOM(Browser Object Model, 브라우저 객체 모델)
	//- JavaScript가 브라우저와 소통하기 위해서 만들어진 모델이다.
	//- 웹문서에 대한 모든 내용을 담고 있는 객체
	//- 모든 개별 객체들은 최상위 객체인 window 아래 존재
	//- 웹 페이지 내용을 제외한 웹 브라우저 창에 포함된 모든 객체 요소들을 의미합니다.
	//- window 속성에 속하며 document 문서가 아닌, window를 제어 한다.
	//DOm은 DOM(Document Object Model, 문서 객체 모델)
	//- 브라우저가 웹 문서를 이해할 수 있도록 구성된 것
	//- 웹 페이지의 내용을 제외한 브라우저창에 포함된 모든 객체 요소들
	//- html 태그를 동적으로 제어한다.
	//- 구조화된 웹이며 모든 요소들의 정보를 객체화하여 관리가 가능하다.
	//- 브라우저가 html 페이지를 로드하는 과정에서 태그(Tag)들을 각기 하나의 객체로 만든다.
	//- html 등의 문서의 내용을 노드 트리(node tree) 구조의 객체들로 나타낸다.
	//- html과 JavaScript를 연결해주는 역할로 JavaScript를 이용해 각 요소에 접근한다.
	// ##차이점은 DOm은 Document, 현재 눈에 보이는 웹문서에 대한 제어와 변경을 한다면,
	//			BOM은 window 속성에 속하는 Document가 아닌, window를 제어합니다.

// [개념] 6. 문자열을 선언하고, 대입하는 것과 누적하는 것의 차이점을 예시로 만들어서 처리하세요.
		var string = "안녕하세요"; //문자열 선언
		alert(string)
		string = "반갑습니다" //문자열 대입
		alert(string)
		//대입은 string 변수의 값을 덮어씌우는 것이고
		string += " 홍길동 입니다." //문자열 누적
		alert(string)
		//누적은 기존에 있는 문자열 옆에 누적시켜 같이 저장되는 것이다.

// [개념] 7. ++변수, 변수--의 의미를 예시를 통해서 기술하세요.
		var cnt2 = 0;
		alert(++cnt2) //1 먼저 더하고 출력
		alert(cnt2++) //1 출력하고 더하기
		alert(--cnt2) //1 먼저 빼고 출력
		alert(cnt2--) //1 출력하고 빼기

// [개념] 8. js에서 변수을 선언/할당에 있어서, java와의 차이점을 예제를 통해 기술하세요.
		// java에서는 대입 하려는 데이터 타입에 맞게 변수를 선언해줘야 한다.
		// String name="홍길동"; //java의 변수 선언 및 할당
		// int age = 25;
		// Boolean a= true;
		// js에서는 var을 통해 선언하고 입력한 데이터 타입에 맞에 자동으로 형변환해준다.
		// var name="홍길동"; //js의 변수 선언 및 할당
		// var age = 25;
		// var a= true;

// [개념] 9. prompt창의 사용법을 기본예제를 통해서 기술하세요..
		//js에서 데이터 입력 함수
        //prompt("메시지내용","입력초기값"): 리턴값이 할당된 데이터
		//리턴값을 받은 변수를 선언하고 입력값을 받기 위한 메세지와 입력초기값을 설정한다.
        var input = prompt('Message', 'DefStr');
		alert(input) //입력값을 받아 출력한다.

// [개념] 10. confirm창의 사용법을 기본예제를 통해서 기술하세요..
		//js 확인창 띄우기
		//confirm("표시할 문구");
		//리턴값을 받은 변수를 선언하고 입력값을 받기 위한 메세지를 선언한다.
		//confirm창은 Boolean값을 반환하기 때문에, true, false 두가지이다.

// [개념] 11. 형변환 '52' + 273 + 12, 52 + 273 + '12' 차이점을 기술하세요.
		//alert('52' + 273 + 12); //'52'+'273'+'12' ==> 5227312
		//연산이 왼쪽에서 오른쪽으로 가기 때문에
		//문자열+숫자=>문자열+숫자=>문자열로 자동형변환되어
		//'52' + 273=>'52273'+ 12=>'5227312'
		// alert(52 + 273 +'12'); //325 + '12' ==> 32512
		//숫자+숫자=>숫자+문자열=>문자열
		//52 + 273=>325+'12'=>'32512'

// [개념] 12. js에서 형변환의 특징을 예제를 통해 기술하세요
		//js는 자바스크립트는 타입이 매우 유연한 언어이다. 때문에 자바스크립트 엔진이 필요에
		// 따라 암시적변환을 혹은 개발자의 의도에 따라 명시적변환을 실행한다.
		//더하기(+) 연산자는 숫자보다 문자열이 우선시 되기 때문에, 숫자형이 문자형을 만나면 문자형으로 변환하여 연산된다.
		//다른 연산자(- * / %)는 숫자형이 문자형보다 우선시되기 때문에 더하기와 같은 문자형으로의 변환이 일어나지 않는다.
		//동치비교
		//null == undefined // true 0 == 0
			// “0” == 0 // true 0 == 0
			// 0 == false // true 0 == 0
			// “0” == false // true 0 == 0
			// 엄격한 동치(===)는 데이터 타입까지 모드 맞아야 한다.
		//Number()는 숫자형으로 바꿔주는 명시적 형 변환이다.
		//parseInt()는  정수형의 숫자로 변환한다.
		//parseFloat()는 부동 소수점의 숫자로 변환한다.

// [개념] 13. js에서 사용하는 Math객체의 하위 메서드를 예제를 통해 기술하세요.
		// 1. Math.floor():실수 내림 처리(정수형)
		// Math.floor(Math.random()*100); //0~100 임의의 숫자를 받아 정수형으로 변환
        // 2. Math.random() 임의의 수 처리 0.0 <= Math.random()<1.0
        // 3. Math.round() 반올림
		// Math.round(tot/3) 정수/정수=>실수 이기 때문에 반올림
        // 4. Math.ceil() 올림
		// Math.ceil(tot/3) => 올림
	
// [확인] 14. js에서 사용하는 Math객체의 random()메서드를 활용해서 모두의 마블 2개의 팀의 점수를 나타내세요.
		var teama=Math.random()*100;
		var teamb=Math.random()*100;
		alert("a팀의 점수: "+Math.floor(teama)+", b팀의 점수: "+Math.floor(teamb))

// [확인] 15. js에서 back tick 사용을 통해서 변수 선언과 활용 예제 만들어 기술하세요
		// `: back tick 문자열 선언
		// backtick은 작은 따옴표와 다르게 새로운 백틱 기호가 등장하기 전까지 
		// 전체를 백틱 기호가 적용되는 범위로 간주한다.
        //1. backtick을 사용한 문자열에서는 별도의 코드를 입력하지 않아도
		//  자체적으로 줄바꿈(개행)이 가능하다.
        //2. ${변수명}으로 데이터를 사용 가능하다. (+없이)
		var frt="바나나"
        var price=5000;
        alert(`물건: ${frt}
가격: ${price}`) //자체적으로 개행을 해줌
	</script>

</body>
</html>