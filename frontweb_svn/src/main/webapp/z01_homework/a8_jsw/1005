// # 주관식 연습 및 실습 10문제:
// 1. `arguments` 객체는 어떤 자료형으로 출력되는가? 
배열
// 2. `arguments`의 주요 용도는 무엇인가요?
 여러가지 매개변수를 효율적으로 동적으로 처리하기 위한 내장 객체
// 3. `setInterval` 함수는 어떻게 사용되나요? 그리고 어떤 동작을 수행하는가? 
setInterval(function(){},1/1000단위초)
정해진 시간마다 함수가 반복됩니다.
// 4. `setTimeout`과 `clearInterval`을 함께 사용하는 주된 목적은 무엇인가요?
프로그램 실행중 일시정지 하고싶으면 시간을 멈추기 위해 clearInterval을 사용해야한다.
그리고 매개변수로 입력된 함수의 기능이 끝나고 남은 자원을 청소해준다.
// 5. `eval()` 함수의 기능은 무엇인가요?
eval함수의 매개변수를 그대로 코드로 리턴합니다.
// 6. `isNaN` 함수는 어떤 경우에 `true`를 반환하는가?
숫자형 문자열이 아닐경우 true리턴합니다.
// 7. 매개변수의 기본값은 어떻게 설정하는가?
function_keyword function_name(parameter1="기본값1", parameter2="기본값2", parameter3="기본값3", ...)
// 8. `Number()` 함수와 `parseInt()`, `parseFloat()`의 차이점은 무엇인가요?
Number()함수는 숫자형문자열만 변환 가능합니다. 예시로 "232", "63434" 이런것들이요..
parseInt()는 숫자와 문자가 혼합된 문자열 가장 앞에 있는 정수형을 추출합니다. 만약 문자로 시작하는 문자열은 추출하지 못합니다. 완전히 숫자로 된 경우 정수부분을 추출합니다.
parseFloat()는 숫자와 문자가 혼합된 문자열 가장 앞에 있는 실수형을 추출합니다. 만약 문자로 시작하는 문자열은 추출하지 못합니다. 완전히 숫자로 된 경우 실수부분을 추출합니다.

// #객관식(4지선다) 10문제:
// 1. `arguments` 객체는?
//    - A. 배열 		ㅇ
//    - B. 객체      	 	X
//    - C. 문자열      	 X
//    - D. 숫자      		 X
// 2. `setInterval` 함수의 목적은?
//    - A. 지정된 시간 후 함수를 한 번만 실행한다.      	 X
//    - B. 지정된 시간마다 함수를 반복적으로 실행한다.	ㅇ
//    - C. 지정된 시간 동안 함수를 일시 중단한다.      	 X
//    - D. 모든 타이머를 중지한다.      	 		X

// 3. `eval` 함수의 역할은?
//    - A. 코드를 문자열로 변환한다.      	 X
//    - B. 문자열로 된 코드를 실행한다.		ㅇ
//    - C. 변수의 값을 계산한다.      		 X
//    - D. 문자열을 숫자로 변환한다.      	 X

// 4. 다음 중 `isNaN` 함수가 `true`를 반환하는 것은?
//    - A. `isNaN("100")`      		 X
//    - B. `isNaN(100)`      		 X
//    - C. `isNaN("Hello")`		ㅇ
//    - D. `isNaN(undefined)`		ㅇ

// 5. 매개변수의 기본값을 설정하는 방법은?
//    - A. `function test(a = 10) {}`	ㅇ
//    - B. `function test(a: 10) {}`      	 X
//    - C. `function test(a; 10) {}`      	 X
//    - D. `function test(a) = 10 {}`      	 X

// 6. 1 나누기 0의 결과는?
//    - A. 1      	 	X
//    - B. 0      	 	X
//    - C. `undefined`      	 X
//    - D. `Infinity`	ㅇ

// 7. 함수를 다른 함수의 매개변수로 전달하는 기능을 무엇이라고 하는가?
//    - A. 콜백 함수      	 X
//    - B. 리턴 함수      	 X
//    - C. 중첩 함수		ㅇ
//    - D. 순수 함수      	 X

// 8. `Number("1000원")`의 결과는?
//    - A. `NaN`		ㅇ
//    - B. 1000      		 X
//    - C. "1000원"      	 X
//    - D. 에러 발생      	 X

// 9. `parseInt("1.5달러")`의 결과는?
//    - A. 1.5  	    	 X
//    - B. 1		ㅇ
//    - C. `NaN`       	 X
//    - D. 에러 발생    	    X

// 10. JavaScript에서 `arguments` 객체는 어떤 함수에서 사용 가능한가?
//    - A. 모든 함수에서              ㅇ
//    - B. 화살표 함수에서만             X
//    - C. 전통적인 함수에서만	ㅇ
//    - D. 클래스 내부 함수에서만         ㅇ



/*
//class키워드로 정의한 class로 실험
class Test_c
{
    constructor()
    {

    }
    summation()
    {
        let sum=0;
        for(let i=0;i<arguments.length;i++)
        {
            sum+=arguments[i];
        }
        alert(sum);
    }
}
let woong=new Test_c;
woong.summation(100,200,300);
*/

/*
//function키워드로 정의한 class로 실험
function Test_f()
{
    this.summation=function()
    {
        let sum=0;
        for(let i=0;i<arguments.length;i++)
        {
            sum+=arguments[i];
        }
        alert("총합 : "+sum);
    }
}
z=new Test_f();
z.summation(1,2,3,4,5,6);
*/













// # 실습문제
// 1. **arguments 객체 활용**:
//     - `arguments` 객체를 사용하여 받은 숫자의 평균값을 반환하는 함수 `average`를 작성하세요.

function average()
{
    let sum=0;
    for(let idx=0;idx<arguments.length;idx++)
    {
        sum+=arguments[idx];
    }
    return sum/arguments.length;
}
alert(average(1,2,3,4,5));

// 2. **함수를 매개변수로 전달**:
//     - `call01` 함수와 같은 방식으로, 문자열을 출력하는 함수 `printMessage`를 작성하고, 이 함수를 매개변수로 받아 3번 출력하는 `repeatMessage` 함수를 작성하세요.

let str=prompt("반복할 메세지를 입력하세요.");

function printMessage(message)
{
    console.log(message);
}



function repeatMessage(messagefunction)
{
  for(let idx=0;idx<3;idx++)
  {
    messagefunction();
  }
 
}

repeatMessage(function(){printMessage(str)});


// 3. **setInterval & setTimeout 활용**:
//     - 5초 간격으로 현재 시간을 출력하고, 총 3번 출력한 후에 타이머를 종료하는 코드를 작성하세요.

문제를 아직 모르겠습니다.

// 4. **eval 함수 활용**:
//     - `eval` 함수를 사용하여 "5+7" 이라는 문자열의 연산 결과를 출력하는 코드를 작성하세요.

console.log("5 + 7 = "+eval("5+7"));

// 5. **숫자 에러 체크**:
//     - "Hello"라는 문자열을 숫자로 변환하려고 할 때 발생하는 에러를 확인하고, `isNaN` 함수로 이 에러를 체크하는 코드를 작성하세요.

alert(Number("Hello"));
alert(isNaN(Number("Hello")));

// 6. **기본 매개변수 활용**:
//     - 세 개의 매개변수 a, b, c의 곱을 반환하는 함수를 작성하세요. b와 c는 기본값이 각각 3, 5로 설정되어 있어야 합니다.

function multiply(a,b=3,c=5)
{
    return a*b*c;
}
console.log(multiply(1,2,3));
console.log(multiply(1,2));
console.log(multiply(1));

// 7. **문자열에서 숫자 추출**:
//     - "35km"와 "10m"에서 숫자만 추출하여 더한 결과를 출력하는 코드를 작성하세요.

let x=parseInt("35km")
let y=parseInt("10km")
console.log(x+y);

// 8. **prompt를 활용한 입력과 형변환**:
//     - 사용자에게 "3.2kg"와 같이 kg 단위로 무게를 입력받고, 두 입력 값을 합산하여 출력하는 코드를 작성하세요.

let x=parseFloat(prompt("무게를 입력하세요. (기준은 kg)"));
let y=parseFloat(prompt("무게를 입력하세요. (기준은 kg)"));
console.log(x+y);

// 9. **함수 호출 시 값 전달**:
//     - 위에서 정의한 `test` 함수를 호출하되, a만 값을 전달하여 b와 c의 기본값과 함께 출력되게 하세요.

문제를 아직 모르겠습니다.

// 10. **문자열 내 숫자 추출 및 연산**:
//     - "120$"와 "100$"에서 각각의 숫자만 추출하여 더한 후 결과를 출력하는 코드를 작성하세요.

let x=parseFloat("120$");
let y=parseFloat("100$");
console.log(x+y);

/*