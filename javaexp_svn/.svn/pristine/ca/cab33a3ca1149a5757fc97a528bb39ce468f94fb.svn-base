**Oracle의 DML, DDL, DCL 탐험에 오신 것을 환영합니다!** 🌟
### 1. 흥미로운 도입
상상해보세요, 당신이 거대한 도서관의 관리자입니다. 책들을 정리하고, 새 책을 추가하며, 
도서관 이용 규칙을 설정합니다. 이와 유사하게, 데이터베이스에서도 데이터를 관리하고, 구조를
정의하며, 접근 권한을 제어합니다. Oracle에서 이러한 작업을 수행하는 데 사용되는 
명령어들이 바로 DML (Data Manipulation Language), DDL 
(Data Definition Language), DCL (Data Control Language)입니다.
### 2. 학습목표
- DML, DDL, DCL의 개념과 차이점을 이해합니다.
- Oracle에서 이러한 명령어들을 어떻게 사용하는지 배웁니다.
- 데이터베이스 구조를 변경하고 데이터를 안전하게 조작하는 방법을 학습합니다.
### 3. 주요 핵심 키워드와 개념
- **DML (Data Manipulation Language)**
  - 데이터 조작 언어
  - `INSERT`, `UPDATE`, `DELETE`, `SELECT`
- **DDL (Data Definition Language)**
  - 데이터 정의 언어
  - `CREATE`, `ALTER`, `DROP`, `TRUNCATE`
- **DCL (Data Control Language)**
  - 데이터 제어 언어
  - `GRANT`, `REVOKE`
### 4. 생각하고 토론해볼 내용
- 어떤 상황에서 DDL이 DML보다 더 중요할까요?
- 데이터베이스에서 DCL의 역할이 왜 중요할까요?
- 어떤 경우에 `TRUNCATE` 대신 `DELETE`를 사용하면 안 되나요?
### 5. 간단한 퀴즈
1) `TRUNCATE`와 `DELETE`의 차이점은 무엇인가요?
2) 어떤 명령어를 사용하여 사용자에게 테이블을 조회할 수 있는 권한을 부여할 수 있나요?
3) 데이터베이스에서 새로운 테이블을 생성하려면 어떤 DDL 명령어를 사용해야 하나요?
### 6. 실무적용 예시
- **데이터베이스 설계**
  - 새로운 시스템을 위한 데이터베이스 스키마 생성 (`CREATE`)
- **데이터 정리**
  - 특정 조건을 만족하는 데이터 업데이트 (`UPDATE`)
  - 불필요한 데이터 삭제 (`DELETE`)
- **보안 및 접근 제어**
  - 특정 사용자에게 데이터베이스 테이블에 대한 읽기 권한 부여 (`GRANT SELECT`)

