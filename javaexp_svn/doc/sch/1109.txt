@ 데이터베이스 구현
### 1. 흥미로운 도입
상상해보세요. 당신은 도서관의 사서입니다. 매일 수많은 책들이 대출되고 반납됩니다. 
이처럼 복잡한 정보를 관리하기 위해 사서는 체계적인 시스템이 필요합니다. 이 시스템에서 책을 찾고, 
대출 상태를 갱신하고, 새 책을 등록하는 등의 작업을 수행해야 하는데요, 프로그래밍 세계에서 
이러한 역할을 하는 것이 바로 'DAO(Data Access Object)'입니다. 
오늘 우리는 DAO가 어떻게 데이터베이스와 상호작용하는지 알아볼 것입니다.
### 2. 학습목표
- DAO 패턴을 사용하여 데이터베이스 연동 로직을 작성하는 방법을 배웁니다.
- CRUD(Create, Read, Update, Delete) 연산을 DAO를 통해 구현하는 방법을 학습합니다.
### 3. 주요 핵심 키워드와 개념
- **Connection Pooling**
- **Transaction Management**
### 4. 생각하고 토론해볼 내용
- DAO와 Repository 패턴의 차이점은 무엇일까요?
- DAO를 설계할 때 트랜잭션 관리는 어떻게 해야 할까요?
- DAO를 구현할 때 단일 책임 원칙(Single Responsibility Principle)을 어떻게 지킬 수 있을까요?
### 5. 간단한 퀴즈
1) DAO 패턴에서 CRUD는 무엇의 약자인가요?
2) JDBC에서 `PreparedStatement`와 `Statement`의 주요 차이점은 무엇인가요?
3) 트랜잭션 관리에서 ACID는 무슨 의미를 가지나요?

@ 프런트단 구현 프로젝트
### 1. 흥미로운 도입
웹 프론트엔드 개발은 마치 빈 캔버스에 그림을 그리는 것과 같습니다. 당신은 브라우저라는 
캔버스에 사용자와 상호작용하는 아름다운 웹사이트를 그려나갈 것입니다. 이 프로젝트를 통해 
당신은 단순한 정보를 전달하는 페이지에서 벗어나 사용자 경험을 극대화하는 인터랙티브한 
웹사이트를 만드는 방법을 배울 것입니다.
### 2. 학습목표
- 웹사이트의 기본 구조를 이해하고 HTML을 사용해 구성할 수 있습니다.
- CSS를 사용해 웹사이트에 스타일을 적용하고 레이아웃을 디자인할 수 있습니다.
- 자바스크립트로 동적인 웹 페이지를 구현할 수 있습니다.
### 3. 주요 핵심 키워드와 개념
- **HTML5**: 웹사이트의 구조를 마크업하는 언어
- **CSS3**: 스타일링과 레이아웃을 위한 스타일 시트 언어
- **JavaScript**: 웹 페이지에 상호작용을 추가하는 스크립팅 언어
- **프레임워크와 라이브러리**: React, Angular, Vue, Bootstrap 등
### 4. 생각하고 토론해볼 내용
- 사용자 경험(UX)을 향상시키기 위해 우리가 웹사이트에 어떤 요소를 추가할 수 있을까요?
- 모바일 우선 접근법이 중요한 이유는 무엇일까요?
- 프론트엔드 프레임워크를 사용하는 것의 장단점은 무엇일까요?
### 5. 간단한 퀴즈
1. HTML5에서 새롭게 추가된 시맨틱 태그 중 하나는 아래 중 어느 것입니까?
   a) `<div>`
   b) `<span>`
   c) `<article>`
   d) `<format>`
2. 다음 중 웹사이트에 상호작용을 추가하기 위해 자바스크립트와 함께 사용되는 DOM API는 무엇입니까?
   a) `document.querySelector()`
   b) `document.fontSize()`
   c) `window.alertSize()`
   d) `navigator.geolocation()`
### 6. 실무적용 예시
- **레스토랑 웹사이트 구현**: 메뉴, 예약 시스템, 사용자 리뷰 섹션을 포함하는 웹사이트.
- **포트폴리오 웹사이트**: 자신의 프로젝트와 경력을 보여주는 개인 웹사이트.
- **이벤트 프로모션 페이지**: 특정 이벤트나 캠페인을 위한 단일 페이지 사이트, 사용자 참여를 유도하는 CTA(호출을 행동으로 유도하는 문구) 포함.



