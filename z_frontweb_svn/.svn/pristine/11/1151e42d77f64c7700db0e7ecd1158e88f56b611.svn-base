<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=<device-width>, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
//# javascript
// [개념] 1. 선언적 함수과 변수형함수의 차이점을 예제를 통해서 설명하세요.
// [확인] 2. 선언적 함수로 매개변수로, 구구단의 시작단수와 마지막단수를 입력받아 console.log로 구구단을 출력하세요.
// [개념] 3. js의 함수의 매개변수와 리턴값을 기본예제를 만들어 설명하세요.
// [개념] 4. js의 arguments는 어떤 때 사용되는지 기본예제를 통해서 설명하세요

// # javascript
// **[개념] 1. 선언적 함수과 변수형함수의 차이점을 예제를 통해서 설명하세요.**

// **정답:** 
// 선언적 함수는 함수 이름으로 함수를 정의하는 것을 의미하며,
//  변수형 함수는 함수 표현식을 변수에 할당하여 함수를 정의합니다.

// ```javascript
// // 선언적 함수
// function add(x, y) {
//     return x + y;
// }

// // 변수형 함수
// var multiply = function(x, y) {
//     return x * y;
// };
// ```

// **[확인] 2. 선언적 함수로 매개변수로, 구구단의 시작단수와 마지막단수를 입력받아 console.log로 구구단을 출력하세요.**

// **정답:**
// ```javascript
// function printMultiplicationTable(start, end) {
//     for (var i = start; i <= end; i++) {
//         for (var j = 1; j <= 9; j++) {
//             console.log(i + " * " + j + " = " + i*j);
//         }
//         console.log("-----");
//     }
// }

// printMultiplicationTable(2, 5);
// ```

// **[개념] 3. js의 함수의 매개변수와 리턴값을 기본예제를 만들어 설명하세요.**

// **정답:**
// 함수의 매개변수는 함수가 작업을 수행할 때 필요한 값을 전달받는 변수입니다. 리턴값은 함수의 작업 결과를 호출자에게 반환하는 값입니다.

// ```javascript
// function add(x, y) { // x, y는 매개변수
//     return x + y;  // x + y의 결과는 리턴값
// }

// var result = add(3, 4);  // 3, 4는 인수, result에는 7이 저장됩니다.
// ```

// **[개념] 4. js의 arguments는 어떤 때 사용되는지 
//            기본예제를 통해서 설명하세요.**
// 정답:**
// `arguments`는 함수 내에서 사용할 수 있는 지역 변수로, 
//  함수에 전달된 인수를 배열 형태로 가지고 있습니다. 
//  이를 통해 함수에 전달된 모든 인수에 액세스할 수 있습니다.
// ```javascript
// function showArguments() {
//     for (var i = 0; i < arguments.length; i++) {
//         console.log(arguments[i]);
//     }
// }
// showArguments(1, 'hello', true, [1, 2, 3]);

// ``` 

// ```




    </script>
</body>
</html>