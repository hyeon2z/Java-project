<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
 // # 주관식 연습 및 실습 10문제:
// 1. `arguments` 객체는 어떤 자료형으로 출력되는가?
// arguments의 자료형은 객체입니다.
// 2. `arguments`의 주요 용도는 무엇인가요?
// 	함수의 매개변수를 동적으로 처리할 수 있습니다.
//	매개변수의 갯수, 자료형을 신경쓰지 않아도 arguments를 통해서 대처가 가능합니다.

// 3. `setInterval` 함수는 어떻게 사용되나요? 그리고 어떤 동작을 수행하는가?
// setInteval 함수를 사용하면 일정 시간마다 함수를 호출할 수 있습니다.
// setInteval(fun01(), 5000) fun01이라는 함수를 5초마다 호출함.
// 4. `setTimeout`과 `clearInterval`을 함께 사용하는 주된 목적은 무엇인가요?
// setTiemout으로 사용한 메모리를 clearInteval를 이용해서 해제해주는 역할을 합니다.
// clearInteval을 사용하지 않으면 작업이 계속해서 진행되기 때문에 리소스 낭비를 초래할 수 있습니다.

// 5. `eval()` 함수의 기능은 무엇인가요?
// eval() 함수를 이용하면 문자열로 주어진 명령어도 수행할 수 있습니다.
// 6. `isNaN` 함수는 어떤 경우에 `true`를 반환하는가?
// isNan은 Is not a number?의 준말로 Number(), parseInt()와 같이 숫자형으로 형변환을 할 수 있는지
// 여부를 확인할 수 있습니다. isNan이 true로 반환되는 경우에는 숫자형으로 형변환을 할 수 없습니다.
// 7. 매개변수의 기본값은 어떻게 설정하는가?
// fun(int num01 = 2)라고 함수를 선언할 때 default값을 넣으면 함수를 호출할 때
// 매개변수를 따로 넣지 않아도 매개변수를 2로 받아서 함수를 실행합니다.
// 8. `Number()` 함수와 `parseInt()`, `parseFloat()`의 차이점은 무엇인가요?
// Number()는 숫자형 문자열만 형변환을 할 수 있지만 parseInt(),parseFloat는 각각
// 문자열에서 숫자형 문자열만 가지고 와 정수와 실수로 형변환을 가능하게 합니다. 
// #객관식(4지선다) 10문제:
// 1. `arguments` 객체는?
//    - A. 배열
//    # B. 객체
//    - C. 문자열
//    - D. 숫자
// 2. `setInterval` 함수의 목적은?
//    - A. 지정된 시간 후 함수를 한 번만 실행한다.
//    # B. 지정된 시간마다 함수를 반복적으로 실행한다.
//    - C. 지정된 시간 동안 함수를 일시 중단한다.
//    - D. 모든 타이머를 중지한다.

// 3. `eval` 함수의 역할은?
//    - A. 코드를 문자열로 변환한다.
//    # B. 문자열로 된 코드를 실행한다.
//    - C. 변수의 값을 계산한다.
//    - D. 문자열을 숫자로 변환한다.

// 4. 다음 중 `isNaN` 함수가 `true`를 반환하는 것은?
//    - A. `isNaN("100")`
//    - B. `isNaN(100)`
//    # C. `isNaN("Hello")`
//    - D. `isNaN(undefined)`

// 5. 매개변수의 기본값을 설정하는 방법은?
//    # A. `function test(a = 10) {}`
//    - B. `function test(a: 10) {}`
//    - C. `function test(a; 10) {}`
//    - D. `function test(a) = 10 {}`

// 6. 1 나누기 0의 결과는?
//    - A. 1
//    - B. 0
//    - C. `undefined`
//    # D. `Infinity`

// 7. 함수를 다른 함수의 매개변수로 전달하는 기능을 무엇이라고 하는가?
//    - A. 콜백 함수
//    - B. 리턴 함수
//    # C. 중첩 함수
//    - D. 순수 함수

// 8. `Number("1000원")`의 결과는?
//    # A. `NaN`
//    - B. 1000
//    - C. "1000원"
//    - D. 에러 발생

// 9. `parseInt("1.5달러")`의 결과는?
//    - A. 1.5
//    # B. 1
//    - C. `NaN`
//    - D. 에러 발생

// 10. JavaScript에서 `arguments` 객체는 어떤 함수에서 사용 가능한가?
//    # A. 모든 함수에서
//    - B. 화살표 함수에서만
//    - C. 전통적인 함수에서만
//    - D. 클래스 내부 함수에서만

// # 실습문제
// 1. **arguments 객체 활용**:
//     - `arguments` 객체를 사용하여 받은 숫자의 평균값을 반환하는 함수 `average`를 작성하세요.
function getAvg(){
	var tot = 0;
	for(var i=0; i<arguments.length;i++){
		tot += arguments[i]
		
	}
	return tot/arguments.length
}
console.log(getAvg(10,20,30,40))

// 2. **함수를 매개변수로 전달**:
//     - `call01` 함수와 같은 방식으로, 문자열을 출력하는 함수 `printMessage`를 작성하고, 이 함수를 매개변수로 받아 3번 출력하는 `repeatMessage` 함수를 작성하세요.
// function printMessage(){alert("문자열을 출력하는 함수")}
// var message = printMessage
// function repeatMessage(fun01){
//     fun01()
//     fun01()
//     fun01()
// }
// repeatMessage(message)


// 3. **setInterval & setTimeout 활용**:
//     - 5초 간격으로 현재 시간을 출력하고, 총 3번 출력한 후에 타이머를 종료하는 코드를 작성하세요.
// const currentDate = new Date()
// var cnt = 0
// document.write(currentDate)
// var date = setInterval(function(){
//     document.write(currentDate)
//     cnt++
//     if(cnt==3){
//     alert("출력 종료!")
//     clearInterval(date)
// }
// }, 5000)

// 4. **eval 함수 활용**:
//     - `eval` 함수를 사용하여 "5+7" 이라는 문자열의 연산 결과를 출력하는 코드를 작성하세요.
// alert(eval("5+7"))

// 5. **숫자 에러 체크**:
//     - "Hello"라는 문자열을 숫자로 변환하려고 할 때 발생하는 에러를 확인하고, `isNaN` 함수로 이 에러를 체크하는 코드를 작성하세요.
// console(Number("Hello"))
// alert(isNaN(Number("Hello")))

// 6. **기본 매개변수 활용**:
//     - 세 개의 매개변수 a, b, c의 곱을 반환하는 함수를 작성하세요. b와 c는 기본값이 각각 3, 5로 설정되어 있어야 합니다.
function multi(a, b=3, c=5){
    return a*b*c
}
// alert(multi(5))
// alert(multi(5,4))
// alert(multi(6,5,3))


// 7. **문자열에서 숫자 추출**:
//     - "35km"와 "10m"에서 숫자만 추출하여 더한 결과를 출력하는 코드를 작성하세요.
// alert(parseInt("35km") + parseInt("10m"))

// 8. **prompt를 활용한 입력과 형변환**:
//     - 사용자에게 "3.2kg"와 같이 kg 단위로 무게를 입력받고, 두 입력 값을 합산하여 출력하는 코드를 작성하세요.
// var num01 = prompt("단위를 포함한 숫자 입력 ", "3.2kg")
// var num02 = prompt("단위를 포함한 숫자 입력 ", "6.2kg")
// alert(`${num01} + ${num02} = ${parseFloat(num01) + parseFloat(num02)}`)
 
// 9. **함수 호출 시 값 전달**:
//     - 위에서 정의한 `test` 함수를 호출하되, a만 값을 전달하여 b와 c의 기본값과 함께 출력되게 하세요.
function test(a,b=3,c=5){
    alert(a + b + c)
}
test(3)

// 10. **문자열 내 숫자 추출 및 연산**:
//     - "120$"와 "100$"에서 각각의 숫자만 추출하여 더한 후 결과를 출력하는 코드를 작성하세요.
/*
# 
# 조별로 파악사항(아래사항 조별로 취합 전달 17:20까지 전달)
1. 오늘 가장 어려웠던 부분 best3 및 내일 자세한 설명 필요한 부분
2. 주관식/객관식은 조원들과 함께 협의해서 풀어서 제출하고
    나머지는 개인 폴드에 올려주세요
    (어려운문제도 포함되어 있으니 할 수 있는 내용까지만)
3. 오늘 지각(9:00기준)인원과 사유, 수업 집중 여부 확인


*/

    </script>
</body>
</html>